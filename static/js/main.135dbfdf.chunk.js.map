{"version":3,"sources":["data/values.js","components/legend.js","components/App.js","serviceWorker.js","index.js"],"names":["WATER","max","min","SLEEP","BMI","obese","overweight","normal","SODIUM","limit","SUGAR","femaleLimit","maleLimit","SCREENTIME","Object","freeze","Legend","react_default","a","createElement","className","href","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","totalGood","gender","goal","cupsOfWater","hoursOfSleep","dailyCalories","bmi","bmiMessage","minutesOfExcercise","teaspoonsOfSugar","sodiumMilligrams","screenTime","goalsMet","overallHeathMessage","state","age","height","weight","updateAge","bind","assertThisInitialized","updateWater","updateSleep","updateCalories","updateHeight","updateWeight","updateExcercise","updateMilligrams","updateSugar","updateScreenTime","handleSubmit","handleClear","event","target","value","setState","e","preventDefault","forceUpdate","bmr","console","log","caloricSurplusOrDeficit","toFixed","Math","pow","onSubmit","onChange","setGender","defaultChecked","type","name","required","setGoal","id","onClick","legend","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.135dbfdf.chunk.js","sourcesContent":["export const WATER = {\n  max: 24,\n  min: 8\n}; //Cups\nexport const SLEEP = {\n  max: 9,\n  min: 7\n}; //Hours\n\nexport const BMI = { obese: 30, overweight: 25, normal: 18.5 };\nexport const SODIUM = { limit: 2300 }; //Milligrams\nexport const SUGAR = { femaleLimit: 6, maleLimit: 9 }; //Teaspoons\nexport const SCREENTIME = { limit: 2 }; //Hours\n\n//Freeze our enums\nObject.freeze(WATER);\nObject.freeze(SLEEP);\nObject.freeze(BMI);\nObject.freeze(SODIUM);\nObject.freeze(SUGAR);\nObject.freeze(SCREENTIME);\n","import React from \"react\";\nimport \"../styles/App.css\";\n\nconst Legend = () => (\n  <div className=\"legend\">\n    <br />\n    <h3>Formulas and Information</h3>\n\n    <ul>\n      <li>Gender & Age</li>\n      <ul>\n        <li>Both are factors in determining Base Metabolic Rate (BMR)</li>\n        <li>\n          BMR is the number of calories your body burns in a resting state per\n          day\n        </li>\n        <li>\n          BMR is calculated using the The Harris Benedict equations revised by\n          Mifflin and St Jeor 1990 defined below:\n        </li>\n        <ul>\n          <li>\n            For Women: <br />\n            BMR = (4.536 × weight in pounds) + (15.88 × height in inches) − (5 ×\n            age) − 161\n          </li>\n          <li>\n            For Men: <br />\n            BMR = (4.536 × weight in pounds) + (15.88 × height in inches) − (5 ×\n            age) + 5\n          </li>\n        </ul>\n      </ul>\n\n      <li>Weight Goal (Lose, Maintain, or Gain weight)</li>\n      <ul>\n        <li>\n          Depending on personal factors including Body Mass Index (BMI) an\n          individual may want to lose, gain, or maintain their current weight\n        </li>\n        <li>\n          This is used as a factor to determine based on total calories consumed\n          in a day and BMR if an individual had a caloric surplus or caloric\n          deficit for the day which can be used as baseline to determine whether\n          or not they will lose or gain weight.\n        </li>\n        <li>Caloric Surplus or Deficit = Calories consumed per day - BMR</li>\n        <li>\n          It is considered healthy to meet your goal based on the criteria and a\n          comparison is done in the application to check this based on the\n          chosen goal\n        </li>\n      </ul>\n      <li>Cups of water consumed in a day</li>\n      <ul>\n        <li>\n          It is healthy to drink between 8 and 24 glasses of water per day\n        </li>\n      </ul>\n      <li>Hours of sleep in a day</li>\n      <ul>\n        <li>It is healthy to sleep 7 to 9 hours per day</li>\n      </ul>\n      <li>Calories consumed in a day</li>\n      <ul>\n        <li>The total number of kCals consumed in a day</li>\n        <li>\n          Used as factor in detemining caloric surplus or deficit for the day\n        </li>\n      </ul>\n      <li>Height and Weight</li>\n      <ul>\n        <li>\n          Both are used as factors in determining BMR as well as Body Mass Index\n          or BMI\n        </li>\n        <ul>\n          <li>\n            BMI is calculated by the formula:\n            <br />\n            BMI = ((lbs)/(in^2)) X 703\n          </li>\n          <li>\n            {\" \"}\n            Values for BMR are:\n            <br />\n            {\"Underweight = <18.5\"}\n            <br />\n            {\"Normal weight = 18.5–24.9\"}\n            <br />\n            {\"Overweight = 25–29.9\"}\n            <br />\n            {\"Obesity = BMI of 30 or greater\"}\n            <br />\n          </li>\n        </ul>\n      </ul>\n      <li>Milligrams of sodium consumed in a day</li>\n      <ul>\n        <li>\n          It is considered healthy to consume no more than 2300mg of sodium in a\n          day\n        </li>\n      </ul>\n      <li>Teaspoons of sugar consumed in a day</li>\n      <ul>\n        <li>\n          For women it is unhealthy to consume 6 teaspoon or more of sugar in a\n          day\n        </li>\n        <li>\n          For men it is unhealthy to consume 9 teaspoon or more of sugar in a\n          day\n        </li>\n      </ul>\n      <li>Hours spent in front of a screen</li>\n      <ul>\n        <li>\n          It is unhealthy to spend more than 2 hours in a day staring at\n          electronic screens such as computer monitors, televisions, or cell\n          phones which can be challenging in a world which relies more and more\n          on our devices\n        </li>\n      </ul>\n    </ul>\n    <ul>\n      <li>\n        This app was built using <a href=\"https://reactjs.org/\">React.js</a>,\n        styled with{\" \"}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS\">CSS</a> and\n        hosted via <a href=\"https://pages.github.com/\">Github Pages</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Legend;\n","import React, { Component } from \"react\";\nimport \"../styles/App.css\";\nimport { WATER, SLEEP, BMI, SODIUM, SUGAR, SCREENTIME } from \"../data/values\";\nimport Legend from \"./legend\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.totalGood = 0;\n    this.gender = \"female\";\n    this.goal = \"lose\";\n\n    //Variables to be displayed\n    this.cupsOfWater = \"\";\n    this.hoursOfSleep = \"\";\n    this.dailyCalories = \"\";\n    this.bmi = \"\";\n    this.bmiMessage = \"\";\n    this.minutesOfExcercise = \"\";\n    this.teaspoonsOfSugar = \"\";\n    this.sodiumMilligrams = \"\";\n    this.screenTime = \"\";\n    this.goalsMet = \"\";\n    this.overallHeathMessage = \"\";\n\n    //Variables for user input\n    this.state = {\n      age: \"\",\n      cupsOfWater: \"\",\n      hoursOfSleep: \"\",\n      dailyCalories: \"\",\n      height: \"\",\n      weight: \"\",\n      minutesOfExcercise: \"\",\n      sodiumMilligrams: \"\",\n      teaspoonsOfSugar: \"\",\n      screenTime: \"\"\n    };\n    this.updateAge = this.updateAge.bind(this);\n    this.updateWater = this.updateWater.bind(this);\n    this.updateSleep = this.updateSleep.bind(this);\n    this.updateCalories = this.updateCalories.bind(this);\n    this.updateHeight = this.updateHeight.bind(this);\n    this.updateWeight = this.updateWeight.bind(this);\n    this.updateExcercise = this.updateExcercise.bind(this);\n    this.updateMilligrams = this.updateMilligrams.bind(this);\n    this.updateSugar = this.updateSugar.bind(this);\n    this.updateScreenTime = this.updateScreenTime.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  setGender(event) {\n    this.gender = event.target.value;\n  }\n  setGoal(event) {\n    this.goal = event.target.value;\n  }\n  updateWater(event) {\n    this.setState({ cupsOfWater: event.target.value });\n  }\n  updateSleep(event) {\n    this.setState({ hoursOfSleep: event.target.value });\n  }\n  updateCalories(event) {\n    this.setState({ dailyCalories: event.target.value });\n  }\n  updateHeight(event) {\n    this.setState({ height: event.target.value });\n  }\n  updateWeight(event) {\n    this.setState({ weight: event.target.value });\n  }\n  updateExcercise(event) {\n    this.setState({ minutesOfExcercise: event.target.value });\n  }\n  updateMilligrams(event) {\n    this.setState({ sodiumMilligrams: event.target.value });\n  }\n  updateSugar(event) {\n    this.setState({ teaspoonsOfSugar: event.target.value });\n  }\n  updateScreenTime(event) {\n    this.setState({ screenTime: event.target.value });\n  }\n  updateAge(event) {\n    this.setState({ age: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.totalGood = 0;\n    this.goalsMet = \"Goals Met\";\n\n    this.forceUpdate();\n\n    // Check if we had enough water\n    if (\n      this.state.cupsOfWater >= WATER.min &&\n      this.state.cupsOfWater < WATER.max\n    ) {\n      //We had at least 8 cups of water\n      this.cupsOfWater =\n        \"GOAL MET: \" + this.state.cupsOfWater + \" Cups is healthy\";\n      this.totalGood++;\n    } else if (this.state.cupsOfWater >= WATER.max) {\n      this.cupsOfWater =\n        \"GOAL NOT MET: \" + this.state.cupsOfWater + \" Cups is too much\";\n    } else {\n      //We had less than 8 cups of water\n      this.cupsOfWater =\n        \"GOAL NOT MET: \" + this.state.cupsOfWater + \" Cup(s) is not enough\";\n    }\n\n    // Check if we had enough sleep\n    if (\n      this.state.hoursOfSleep >= SLEEP.min &&\n      this.state.hoursOfSleep <= SLEEP.max\n    ) {\n      this.hoursOfSleep =\n        \"GOAL MET: \" + this.state.hoursOfSleep + \" Hrs. is healthy\";\n      this.totalGood++;\n    } else if (this.state.hoursOfSleep > SLEEP.max) {\n      this.hoursOfSleep =\n        \"GOAL NOT MET: \" + this.state.hoursOfSleep + \" Hrs. is too much\";\n    } else {\n      this.hoursOfSleep =\n        \"GOAL NOT MET: \" + this.state.hoursOfSleep + \" Hour(s) is not enough\";\n    }\n\n    // Check amount of calories\n    // We first need bmr\n    let bmr = 0;\n    if (this.gender === \"female\") {\n      //determine BMR for a female\n      bmr =\n        4.536 * this.state.weight +\n        15.88 * this.state.height -\n        5 * this.state.age -\n        161;\n\n      console.log(\"F BMR -> \" + bmr);\n    } else {\n      //Determine BMR for a male\n      bmr =\n        4.536 * this.state.weight +\n        15.88 * this.state.height -\n        5 * this.state.age +\n        5;\n\n      console.log(\"M BMR -> \" + bmr);\n    }\n\n    //Determine Caloric Surplus/Deficit\n    let caloricSurplusOrDeficit = this.state.dailyCalories - bmr;\n\n    if (this.goal === \"lose\") {\n      console.log(\"Goal Lose Weight\");\n      if (caloricSurplusOrDeficit === 0) {\n        // On Track to maintain weight\n        this.dailyCalories =\n          \"GOAL NOT MET: you are on track to maintain weight\";\n      }\n      if (caloricSurplusOrDeficit > 0) {\n        //gain\n        this.dailyCalories = \"GOAL NOT MET: you are on track to gain weight\";\n      }\n      if (caloricSurplusOrDeficit < 0) {\n        //Lose weight\n        this.dailyCalories = \"GOAL MET: you are on track to lose weight\";\n        this.totalGood++;\n      }\n    }\n    if (this.goal === \"maintain\") {\n      console.log(\"Goal Maintain Weight\");\n      if (caloricSurplusOrDeficit === 0) {\n        // On Track to maintain weight\n        this.dailyCalories = \"GOAL MET: you are on track to maintain weight\";\n        this.totalGood++;\n      }\n      if (caloricSurplusOrDeficit > 0) {\n        //gain\n        this.dailyCalories = \"GOAL NOT MET: you are on track to gain weight\";\n      }\n      if (caloricSurplusOrDeficit < 0) {\n        //Lose weight\n        this.dailyCalories = \"GOAL NOT MET: you are on track to lose weight\";\n      }\n    }\n    if (this.goal === \"gain\") {\n      console.log(\"Goal: Gain Weight\");\n      if (caloricSurplusOrDeficit === 0) {\n        // On Track to maintain weight\n        this.dailyCalories = \"GOAL MET: you are on track to maintain weight\";\n      }\n      if (caloricSurplusOrDeficit > 0) {\n        //gain\n        this.dailyCalories = \"GOAL MET: you are on track to gain weight\";\n        this.totalGood++;\n      }\n      if (caloricSurplusOrDeficit < 0) {\n        //Lose weight\n        this.dailyCalories = \"GOAL NOT MET: you are on track to lose weight\";\n      }\n    }\n    this.dailyCalories =\n      this.dailyCalories +\n      \" (\" +\n      this.state.dailyCalories +\n      \"cal consumed)-( \" +\n      bmr +\n      \"cal bmr ) = \" +\n      caloricSurplusOrDeficit.toFixed(2) +\n      \"cal\";\n\n    // Check BMI\n    // [weight (lb) / height (in) / height (in)] x 703\n    let bmi = (this.state.weight / Math.pow(this.state.height, 2)) * 703;\n    this.bmi = bmi.toFixed(2);\n\n    // eslint-disable-next-line default-case\n    switch (true) {\n      case this.bmi >= BMI.obese:\n        this.bmiMessage =\n          \"GOAL NOT MET: A BMI of \" + this.bmi + \" is considered obese\";\n        break;\n      case this.bmi < BMI.obese && this.bmi >= BMI.overweight:\n        this.bmiMessage =\n          \"GOAL NOT MET: \" +\n          \"A BMI of \" +\n          this.bmi +\n          \" is considered overweight\";\n        break;\n      case this.bmi < BMI.overweight && this.bmi >= BMI.normal:\n        this.bmiMessage =\n          \"GOAL MET: A BMI of \" + this.bmi + \" is considered healthy\";\n        this.totalGood++;\n        break;\n      case this.bmi < BMI.normal:\n        this.bmiMessage =\n          \"GOAL NOT MET: \" +\n          \"A BMI of \" +\n          this.bmi +\n          \" is considered underweight\";\n        break;\n    }\n\n    // Check amount of sodium\n    if (this.state.sodiumMilligrams >= SODIUM.limit) {\n      this.sodiumMilligrams =\n        \"GOAL NOT MET: \" +\n        this.state.sodiumMilligrams +\n        \"mg of sodium is too much.\";\n    } else {\n      this.sodiumMilligrams =\n        \"GOAL MET: \" + this.state.sodiumMilligrams + \"mg of sodium is healthy.\";\n      this.totalGood++;\n    }\n    // Check sugar\n    if (this.gender === \"female\") {\n      if (this.state.teaspoonsOfSugar >= SUGAR.femaleLimit) {\n        this.teaspoonsOfSugar =\n          \"GOAL NOT MET: \" + this.state.teaspoonsOfSugar + \" tsp is too much.\";\n      } else {\n        this.teaspoonsOfSugar =\n          \"GOAL MET: \" + this.state.teaspoonsOfSugar + \" tsp is healthy\";\n        this.totalGood++;\n      }\n    } else {\n      if (this.state.teaspoonsOfSugar >= SUGAR.maleLimit) {\n        this.teaspoonsOfSugar =\n          \"GOAL NOT MET: \" + this.state.teaspoonsOfSugar + \" tsp is too much.\";\n      } else {\n        this.teaspoonsOfSugar =\n          \"GOAL MET: \" + this.state.teaspoonsOfSugar + \" tsp is healthy\";\n        this.totalGood++;\n      }\n    }\n\n    // Check screen time\n    if (this.state.screenTime > SCREENTIME.limit) {\n      this.screenTime =\n        \"GOAL NOT MET: \" + this.state.screenTime + \" hrs. is too much\";\n    } else {\n      this.screenTime =\n        \"GOAL MET: \" + this.state.screenTime + \" hrs. is healthy\";\n      this.totalGood++;\n    }\n\n    if (this.totalGood >= 6) {\n      this.overallHeathMessage = \"You're in good health, Good job!\";\n    } else if (this.totalGood < 6 && this.totalGood > 3) {\n      this.overallHeathMessage =\n        \"You're in ok health, Look below for information on how to do better\";\n    } else {\n      this.overallHeathMessage =\n        \"Your health may not be very good, look for information below on how to do better and consider changing your habits!\";\n    }\n  }\n\n  handleClear() {\n    console.log(\"Clearing\");\n    this.cupsOfWater = \"\";\n    this.hoursOfSleep = \"\";\n    this.dailyCalories = \"\";\n    this.bmi = \"\";\n    this.bmiMessage = \"\";\n    this.minutesOfExcercise = \"\";\n    this.teaspoonsOfSugar = \"\";\n    this.sodiumMilligrams = \"\";\n    this.screenTime = \"\";\n    this.goalsMet = \"\";\n    this.overallHeathMessage = \"\";\n    this.totalGood = 0;\n\n    //Variables for user input\n    this.setState({\n      cupsOfWater: \"\",\n      hoursOfSleep: \"\",\n      dailyCalories: \"\",\n      height: \"\",\n      weight: \"\",\n      minutesOfExcercise: \"\",\n      sodiumMilligrams: \"\",\n      teaspoonsOfSugar: \"\",\n      screenTime: \"\",\n      age: \"\"\n    });\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <form onSubmit={this.handleSubmit}>\n            <h1>Health Snapshot</h1>\n            <hr className=\"sep\" />\n            <h5>\n              Enter Information Below to help determine what daily habits may\n              say about your health and goals. Your total number of healthy\n              items will be displayed out of 7\n            </h5>\n            <h5>\n              To Find out How your health snapshot is calculated including which\n              fomulas are used and what healthy ranges are read the information\n              located below the form\n            </h5>\n            <br />\n\n            <h3>{this.totalGood + \" / 7 \" + this.goalsMet}</h3>\n            <h4>{this.overallHeathMessage}</h4>\n            <hr className=\"sep\" />\n            <div className=\"row\">\n              <div className=\"group\">\n                <div className=\"row\" onChange={this.setGender.bind(this)}>\n                  <input\n                    className=\"rb\"\n                    defaultChecked\n                    type=\"radio\"\n                    value=\"female\"\n                    name=\"gender\"\n                  />\n                  <span className=\"inputText\">Female</span>\n                  <input\n                    className=\"rb\"\n                    type=\"radio\"\n                    value=\"male\"\n                    name=\"gender\"\n                  />\n                  <span className=\"inputText\">Male</span>\n                  <br />\n                  <label>Gender</label>\n                </div>\n              </div>\n              <div className=\"group output ag e\">\n                <div className=\"group\">\n                  <input\n                    required=\"required\"\n                    className=\"half\"\n                    type=\"number\"\n                    value={this.state.age}\n                    onChange={this.updateAge}\n                    min=\"0\"\n                  />\n                  <span className=\"highlight half\" />\n                  <span className=\"halfbar\" />\n                  <label>Age</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div className=\"row\" onChange={this.setGoal.bind(this)}>\n                <input\n                  className=\"rb\"\n                  defaultChecked\n                  type=\"radio\"\n                  value=\"lose\"\n                  name=\"goal\"\n                />\n                <span className=\"inputText\">Lose Weight</span>\n                <input\n                  className=\"rb\"\n                  type=\"radio\"\n                  value=\"maintain\"\n                  name=\"goal\"\n                />\n                <span className=\"inputText\">Maintain Weight</span>\n                <input className=\"rb\" type=\"radio\" value=\"gain\" name=\"goal\" />\n                <span className=\"inputText\">Gain Weight</span>\n                <br />\n                <label>Goal</label>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  type=\"number\"\n                  value={this.state.cupsOfWater}\n                  onChange={this.updateWater}\n                  min=\"0\"\n                />\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n                <label>Cups of Water per Day</label>\n              </div>\n              <div className=\"group output\" id=\"water\">\n                <p>{this.cupsOfWater}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  type=\"number\"\n                  value={this.state.hoursOfSleep}\n                  onChange={this.updateSleep}\n                  min=\"0\"\n                />\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n                <label>Hrs. of Sleep</label>\n              </div>\n              <div className=\"group output\">\n                <p>{this.hoursOfSleep}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  type=\"number\"\n                  value={this.state.dailyCalories}\n                  onChange={this.updateCalories}\n                  min=\"0\"\n                />\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n                <label>Calories Consumed per Day</label>\n              </div>\n              <div className=\"group output\">\n                <p>{this.dailyCalories}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  className=\"half\"\n                  type=\"number\"\n                  value={this.state.height}\n                  onChange={this.updateHeight}\n                  min=\"0\"\n                />\n                <span className=\"highlight half\" />\n                <span className=\"halfbar\" />\n                <label>Height (in.)</label>\n              </div>\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  className=\"half\"\n                  type=\"number\"\n                  value={this.state.weight}\n                  onChange={this.updateWeight}\n                  min=\"0\"\n                />\n                <span className=\"highlight half\" />\n                <span className=\"halfbar\" />\n                <label>Weight (lbs.)</label>\n              </div>\n\n              <div className=\"group output\">\n                <p>{this.bmiMessage}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  type=\"number\"\n                  value={this.state.sodiumMilligrams}\n                  onChange={this.updateMilligrams}\n                  min=\"0\"\n                />\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n                <label>Milligrams of Sodium per Day</label>\n              </div>\n              <div className=\"group output\">\n                <p>{this.sodiumMilligrams}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  type=\"number\"\n                  value={this.state.teaspoonsOfSugar}\n                  onChange={this.updateSugar}\n                  min=\"0\"\n                />\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n                <label>Tsp of Sugar per Day</label>\n              </div>\n\n              <div className=\"group output\">\n                <p>{this.teaspoonsOfSugar}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"group\">\n                <input\n                  required=\"required\"\n                  type=\"number\"\n                  value={this.state.screenTime}\n                  onChange={this.updateScreenTime}\n                  min=\"0\"\n                />\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n                <label>Hrs. of Screen Time per Day</label>\n              </div>\n              <div className=\"group output\">\n                <p>{this.screenTime}</p>\n                <span className=\"highlight\" />\n                <span className=\"bar\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"btn-box\">\n                <button className=\"btn\" onClick={this.handleClear}>\n                  clear\n                </button>\n                <button className=\"btn btn-submit\" type=\"submit\">\n                  submit\n                </button>\n              </div>\n            </div>\n          </form>\n          <Legend />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}